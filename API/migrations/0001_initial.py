# Generated by Django 5.1.5 on 2025-02-02 07:20

import API.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('username', models.TextField(primary_key=True, serialize=False)),
                ('data', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('TestId', models.BigIntegerField(default=API.models.generate_random_test_id, editable=False, primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=100)),
                ('Time', models.IntegerField(default=180, help_text='Enter time in Minutes')),
                ('Questions', models.IntegerField(verbose_name='Number of Questions')),
                ('scq', models.IntegerField(default=0, verbose_name='Number of Single Correct Questions')),
                ('mcq', models.IntegerField(default=0, verbose_name='Number of Multiple Correct Questions')),
                ('paragraph', models.CharField(default='0', help_text='Enter as Questions, Sub-Questions like There are 2 Paragraphs having 3 Sub questions, then enter 2, 3', max_length=20, verbose_name='Number of Paragraph Questions')),
                ('matching', models.IntegerField(default=0, verbose_name='Number of Matching Questions')),
                ('integer', models.IntegerField(default=0, verbose_name='Number of Integer Questions')),
                ('singledigit', models.IntegerField(default=0, verbose_name='Number of Single Digit Questions')),
                ('Total', models.IntegerField(default=0, help_text='It will get auto evaluated as you enter marking scheme in furter setup.', verbose_name='Total Marks')),
            ],
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Marks', models.JSONField(default=dict)),
                ('TotalMarks', models.JSONField(default=dict, editable=False)),
                ('Timer', models.JSONField(default=dict)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Test', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='API.test')),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject', models.CharField(choices=[('Mathematics', 'Mathematics'), ('Physics', 'Physics'), ('Chemistry', 'Chemistry')], editable=False, max_length=11)),
                ('Number', models.IntegerField(verbose_name='Number of Questions')),
                ('Positive', models.IntegerField(default=4, help_text='Marks for Correct Answer', verbose_name='Marks')),
                ('Negative', models.IntegerField(default=0, help_text='Marks for Wrong Answer', verbose_name='Negative Marks')),
                ('Type', models.CharField(choices=[('SCQ', 'Single Choice Question'), ('MCQ', 'Multiple Choice Question'), ('Paragraph 1', 'Paragraph 1 Questions'), ('Paragraph 2', 'Paragraph 2 Questions'), ('Paragraph 4', 'Paragraph 3 Questions'), ('Matching', 'Matching Type Questions'), ('Integer', 'Integer based Question'), ('Single Digit', 'Single Digit Integer based Question')], max_length=12)),
                ('Questions', models.JSONField(default=dict)),
                ('Test', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='API.test')),
            ],
        ),
        migrations.CreateModel(
            name='TestStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_started', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Test', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='API.test')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Subject', models.CharField(choices=[('Mathematics', 'Mathematics'), ('Physics', 'Physics'), ('Chemistry', 'Chemistry')], editable=False, max_length=11)),
                ('Attempt', models.IntegerField(default=1, verbose_name='Attempt Count')),
                ('Answers', models.JSONField(default=dict)),
                ('Test', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='API.test')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
